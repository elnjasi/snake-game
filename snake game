import pygame
import random
import sys

pygame.init()

SCREEN_WIDTH = 600
SCREEN_HEIGHT = 400
BLOCK_SIZE = 20
FPS = 10

WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
BLUE = (0, 0, 255)
GREEN = (0, 255, 0)

class Snake:
    def __init__(self):
        self.snake_body = [(200, 200), (210, 200), (220, 200)]
        self.direction = "RIGHT"
        self.change_to = self.direction

    def move(self):
        if self.change_to == "UP":
            self.direction = "UP"
        if self.change_to == "DOWN":
            self.direction = "DOWN"
        if self.change_to == "LEFT":
            self.direction = "LEFT"
        if self.change_to == "RIGHT":
            self.direction = "RIGHT"

        if self.direction == "UP":
            self.snake_body[0] = (self.snake_body[0][0], self.snake_body[0][1] - BLOCK_SIZE)
        if self.direction == "DOWN":
            self.snake_body[0] = (self.snake_body[0][0], self.snake_body[0][1] + BLOCK_SIZE)
        if self.direction == "LEFT":
            self.snake_body[0] = (self.snake_body[0][0] - BLOCK_SIZE, self.snake_body[0][1])
        if self.direction == "RIGHT":
            self.snake_body[0] = (self.snake_body[0][0] + BLOCK_SIZE, self.snake_body[0][1])

    def change_direction(self, direction):
        if direction == "UP" and self.direction != "DOWN":
            self.change_to = "UP"
        if direction == "DOWN" and self.direction != "UP":
            self.change_to = "DOWN"
        if direction == "LEFT" and self.direction != "RIGHT":
            self.change_to = "LEFT"
        if direction == "RIGHT" and self.direction != "LEFT":
            self.change_to = "RIGHT"

    def grow(self):
        self.snake_body.append((0, 0))

class Food:
    def __init__(self):
        self.position = (0, 0)
        self.randomize_position()

    def randomize_position(self):
        x = random.randrange(0, SCREEN_WIDTH - BLOCK_SIZE, BLOCK_SIZE)
        y = random.randrange(0, SCREEN_HEIGHT - BLOCK_SIZE, BLOCK_SIZE)
        self.position = (x, y)

screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Snake Game")

clock = pygame.time.Clock()

snake = Snake()
food = Food()

font = pygame.font.SysFont(None, 25)

score = 0

running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                snake.change_direction("UP")
            elif event.key == pygame.K_DOWN:
                snake.change_direction("DOWN")
            elif event.key == pygame.K_LEFT:
                snake.change_direction("LEFT")
            elif event.key == pygame.K_RIGHT:
                snake.change_direction("RIGHT")
            elif event.key == pygame.K_q:
                pygame.quit()
                sys.exit()

    snake.move()

    if snake.snake_body[0] == food.position:
        snake.grow()
        food.randomize_position()
        score += 3

    if (snake.snake_body[0][0] < 0 or snake.snake_body[0][0] >= SCREEN_WIDTH or
            snake.snake_body[0][1] < 0 or snake.snake_body[0][1] >= SCREEN_HEIGHT):
        screen.fill(BLUE)
        text = font.render("Press P to Play and Q to Quit", True, WHITE)
        text_rect = text.get_rect(center=(SCREEN_WIDTH // 2, SCREEN_HEIGHT // 2))
        screen.blit(text, text_rect)
        score = 0  
        pygame.display.flip()

        while True:
            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_p:
                        snake = Snake()
                        food = Food()
                        running = True
                    elif event.key == pygame.K_q:
                        pygame.quit()
                        sys.exit()
            if running:
                break

    screen.fill(BLUE)

    for segment in snake.snake_body:
        pygame.draw.rect(screen, BLACK, (segment[0], segment[1], BLOCK_SIZE, BLOCK_SIZE))

    pygame.draw.rect(screen, RED, (food.position[0], food.position[1], BLOCK_SIZE, BLOCK_SIZE))

    score_text = font.render("Score: " + str(score), True, BLACK)
    screen.blit(score_text, (SCREEN_WIDTH - 100, 10))

    pygame.display.flip()

    clock.tick(FPS)

pygame.quit()
```
